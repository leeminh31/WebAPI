@model List<FPTS_API.Models.SendMail>
@{
    ViewBag.Title = "SendMail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="invoice-body">
    <h1>Khai báo thông tin hóa đơn</h1>
    <form id="form_info" method="post">
        <div class="form-invoice-info">
            <div class="form-invoice-input">
                <label class="label-input" for="invoicecode">Code</label>
                <input type="text"
                       id="txtInvoiceCode"
                       name="invoicecode"
                       onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>
            </div>
            <div class="form-invoice-input">
                <label class="label-input" for="fullname">Tên Khách Hàng</label>
                <input type="text"
                       id="txtFullname"
                       name="fullname"
                       onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>

            </div>
            <div class="form-invoice-input">
                <label class="label-input" for="customeraddress">Địa Chỉ Khách Hàng</label>
                <input type="text" id="txtCustomerAddress" name="customeraddress" onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>

            </div>
            <div class="form-invoice-input">
                <label class="label-input" for="email">Email</label>
                <input type="text"
                       id="txtEmail"
                       name="email"
                       onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>

            </div>
            <div class="form-invoice-input">
                <label class="label-input" for="productname">Tên Sản Phẩm</label>
                <input type="text"
                       id="txtProductName"
                       name="productname"
                       onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>

            </div>
            <div class="form-invoice-input">
                <label class="label-input" for="quantity">Số Lượng</label>
                <input type="text"
                       id="txtQuantity"
                       name="quantity"
                       onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>

            </div>
            <div class="form-invoice-input">
                <label class="label-input" for="price">Giá Tiền</label>
                <input type="text"
                       id="txtPrice"
                       name="price"
                       onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>

            </div>
        </div>
        <div class="form-invoice-btn">
            <button class="btn-invoice" id="btn-search" onclick="Search()">Tìm Kiếm</button>
        </div>
        </form>
</div>
<div class="invoice-data-container">
    @using (Html.BeginForm("Index", "SendEmail", FormMethod.Post))
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Code</th>
                    <th>Tên Khách Hàng</th>
                    <th>Email</th>
                    <th>Địa Chỉ Khách Hàng</th>
                    <th>Tên Sản Phẩm</th>
                    <th>Số Lượng</th>
                    <th>Giá Tiền</th>
                    <th>Check List</th>
                </tr>              
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Count; i++)
                {
                    <tr style="text-align:center">
                        <td>@Html.DisplayTextFor(m => Model[i].InvoiceCode)</td>
                        <td>@Html.DisplayTextFor(m => Model[i].Fullname)</td>
                        <td>@Html.DisplayTextFor(m => Model[i].Email)</td>
                        <td>@Html.Hidden("emailvalue"+i, Model[i].Email)</td>
                        <td>@Html.DisplayTextFor(m => Model[i].CustomerAddress)</td>
                        <td>@Html.DisplayTextFor(m => Model[i].ProductName)</td>
                        <td>@Html.DisplayTextFor(m => Model[i].Quantity)</td>
                        <td>@Html.DisplayTextFor(m => Model[i].Price)</td>
                        <td>@Html.CheckBoxFor(m => Model[i].IsChecked)</td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Send" class="btn btn-default" />
        </div>
    }
</div>
<script>
    const isNull = (id) => {
        if (document.getElementById(id).value.trim() === "") {
            return true
        }
        else
            return false
    }

    const handleError = (id) => {
        document.getElementById(id).parentElement.querySelector("span").innerText = ""
    }

    const Search = () => {
        const x = document.getElementById("btn-search");
        const y = document.getElementById("txtInvoiceCode");
        if (isNull("txtInvoiceCode")) {
            x.setAttribute("type", "button")
            y.focus()
            y.parentElement.querySelector("span").innerText = "Cần điền trường này !"
        } else {
            y.parentElement.querySelector("span").innerText = ""
            x.setAttribute("type", "submit")
            document.getElementById("form_info").setAttribute("action", "@Url.Action("SearchSendMail", "SendMail")")
        }
    }

    const Refresh = () => {
        document.getElementById("form_info").setAttribute("method", "GET")
        document.getElementById("form_info").setAttribute("action", "@Url.Action("SendMail", "SendMail")")
    }

</script>

