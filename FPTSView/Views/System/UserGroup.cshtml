@model List<FPTS_API.Models.UserGroup>
@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="invoice-body">
    <h1>Khai báo thông tin hóa đơn</h1>
    @Html.BeginForm("UserGroup", "System", FormMethod.Post)
    {
    <div class="form-invoice-info">
        <div class="form-invoice-input">
            <label class="label-input" for="username">Tên Tài Khoản</label>
            <input type="text"
                   id="txtUsername"
                   name="username"
                   onblur="handleError(this.id)" />
            <span style="color: red; display: block"></span>

        </div>
        <div class="form-invoice-input">
            <label class="label-input" for="groupcode">Nhóm Người Dùng</label>
            <input type="text"
                   id="txtGroupCode"
                   name="groupcode"
                   onblur="handleError(this.id)" />
            <span style="color: red; display: block"></span>

        </div>
        <div class="form-invoice-input">
            <label class="label-input" for="createby">Được Tảo Bởi</label>
            <input type="text" id="txtCreateBy" name="createby" onblur="handleError(this.id)" />
            <span style="color: red; display: block"></span>

        </div>
        <div class="form-invoice-input">
            <label class="label-input" for="createdate">Ngày Tạo</label>
            <input type="date"
                   id="txtCreateDate"
                   name="createdate"
                   onblur="handleError(this.id)" />
            <span style="color: red; display: block"></span>

        </div>
    </div>
    <div class="form-invoice-btn">
        <button class="btn-invoice" id="btn-create" name="create" value="Create" onclick="Create()">Thêm</button>
        <button style="display:none" class="btn-invoice" id="btn-update" name="update" value="Update" onclick="Update()">Sửa</button>
        <button style="display:none" class="btn-invoice" id="btn-delete" name="delete" value="Delete" onclick="Delete()">Xóa</button>
        <button class="btn-invoice" id="btn-search" name="search" value="Search" onclick="Search()">Tìm Kiếm</button>
        <button class="btn-invoice" id="btn-refresh" name="refresh" value="Refresh">Làm Mới</button>
    </div>
    }
</div>
<div class="invoice-data-container">
    <table class="table">
        <thead>
            <tr>
                <th>Tên Tài Khoản</th>
                <th>Nhóm Người Dùng</th>
                <th>Được Tạo Bởi</th>
                <th>Ngày Tạo</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.Count; i++)
            {
                <tr style="text-align:center">
                    <td>@Html.DisplayTextFor(m => Model[i].Username)</td>
                    <td>@Html.DisplayTextFor(m => Model[i].GroupCode)</td>
                    <td>@Html.DisplayTextFor(m => Model[i].CreateBy)</td>
                    <td>@Html.DisplayTextFor(m => Model[i].CreateDate)</td>
                </tr>
            }
            }
        </tbody>
    </table>
    <div class="data-paginate"></div>
</div>
<script>
    const isNull = (id) => {
        if (document.getElementById(id).value.trim() === "") {
            return true
        }
        else
            return false
    }

    const handleError = (id) => {
        document.getElementById(id).parentElement.querySelector("span").innerText = ""
    }
    const handleUpdate = (i) => {
        const x = document.getElementById("btn-update");
        if (x.style.display === "none") {
            x.style.display = "block";
        }
        if (i === 0) {
            let getDate = document.querySelector(`table tbody tr:first-child`).children[3].innerText.slice(0, -11).split("/")
            if (parseInt(getDate[0]) >= 1 && parseInt(getDate[0]) <= 9) {
                getDate[0] = "0" + getDate[0]
            }
            if (parseInt(getDate[1]) >= 1 && parseInt(getDate[1]) <= 9) {
                getDate[1] = "0" + getDate[1]
            }
            const dateFormat = getDate[2].trim() + "-" + getDate[0] + "-" + getDate[1]
            document.getElementById('txtUsername').value = document.querySelector(`table tbody tr:first-child`).children[0].innerText
            document.getElementById('txtGroupCode').value = document.querySelector(`table tbody tr:first-child`).children[1].innerText
            document.getElementById('txtCreateBy').value = document.querySelector(`table tbody tr:first-child`).children[2].innerText
            document.getElementById('txtCreateDate').value = dateFormat
        } else {
            let getDate = document.querySelector(`table tbody tr:nth-child(${i + 1})`).children[3].innerText.slice(0, -11).split("/")
            if (parseInt(getDate[0]) >= 1 && parseInt(getDate[0]) <= 9) {
                getDate[0] = "0" + getDate[0]
            }
            if (parseInt(getDate[1]) >= 1 && parseInt(getDate[1]) <= 9) {
                getDate[1] = "0" + getDate[1]
            }
            const dateFormat = getDate[2].trim() + "-" + getDate[0] + "-" + getDate[1]
            document.getElementById('txtUsername').value = document.querySelector(`table tbody tr:nth-child(${i + 1})`).children[0].innerText
            document.getElementById('txtGroupCode').value = document.querySelector(`table tbody tr:nth-child(${i + 1})`).children[1].innerText
            document.getElementById('txtCreateBy').value = document.querySelector(`table tbody tr:nth-child(${i + 1})`).children[2].innerText
            document.getElementById('txtCreateDate').value = dateFormat
        }
    }

    const handleDelete = (i) => {
        const x = document.getElementById("btn-delete");
        if (x.style.display === "none") {
            x.style.display = "block";
        }
        i === 0 ? document.getElementById('txtUsername').value = document.querySelector(`table tbody tr:first-child`).children[0].innerText : document.getElementById('txtUsername').value = document.querySelector(`table tbody tr:nth-child(${i + 1})`).children[0].innerText
        i === 0 ? document.getElementById('txtGroupCode').value = document.querySelector(`table tbody tr:first-child`).children[1].innerText : document.getElementById('txtGroupCode').value = document.querySelector(`table tbody tr:nth-child(${i + 1})`).children[1].innerText
    }

    const Delete = () => {
        const x = document.getElementById("btn-delete");
        const y = document.getElementById("txtUsername");
        const z = document.getElementById("txtGroupCode");
        if (isNull("txtUsername")) {
            document.getElementById('btn-delete').setAttribute("type", "button")
            y.focus()
            y.parentElement.querySelector("span").innerText = "Cần điền trường này !"
        } else if (isNull("txtGroupCode")) {
            document.getElementById('btn-delete').setAttribute("type", "button")
            z.focus()
            z.parentElement.querySelector("span").innerText = "Cần điền trường này !"
        } else {
            if (x.style.display === "block") {
                x.style.display = "none";
            }
            y.parentElement.querySelector("span").innerText = ""
            z.parentElement.querySelector("span").innerText = ""
            x.setAttribute("type", "submit")
        }
    }

    const Update = () => {
        const x = document.getElementById("btn-update");
        if (isNull("txtUsername") || isNull("txtGroupCode") || isNull("txtCreateBy") || isNull("txtCreateDate")) {
            x.setAttribute("type", "button")
            alert("Cần điền đầy đủ các trường")
        } else {
            if (x.style.display === "block") {
                x.style.display = "none";
            }
            x.setAttribute("type", "submit")
        }
    }

    const Create = () => {
        const x = document.getElementById("btn-create");
        if (isNull("txtUsername") || isNull("txtGroupCode") || isNull("txtCreateBy") || isNull("txtCreateDate")) {
            x.setAttribute("type", "button")
            alert("Cần điền đầy đủ các trường")
        } else {
            x.setAttribute("type", "submit")
        }
    }

    const Search = () => {
        const x = document.getElementById("btn-search");
        const y = document.getElementById("txtUsername");
        const z = document.getElementById("txtGroupCode");
        if (isNull("txtUsername")) {
            x.setAttribute("type", "button")
            y.focus()
            y.parentElement.querySelector("span").innerText = "Cần điền trường này !"
        } else if (isNull("txtGroupCode")) {
            x.setAttribute("type", "button")
            z.focus()
            z.parentElement.querySelector("span").innerText = "Cần điền trường này !"
        } else {
            y.parentElement.querySelector("span").innerText = ""
            Z.parentElement.querySelector("span").innerText = ""
            x.setAttribute("type", "submit")
        }
    }
</script>



