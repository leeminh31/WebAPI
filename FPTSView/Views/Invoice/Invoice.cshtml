@model List<FPTS_API.Models.Invoice>
@{
    ViewBag.Title = "Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="invoice-body">
    <h1>Khai báo thông tin hóa đơn</h1>
    <form id="form_info" method="post">
        <div class="form-invoice-info">
            <div class="form-invoice-input">
                <label class="label-input" for="customerid">ID Người Dùng</label>
                <input type="text"
                       id="txtCustomerID"
                       name="customerid"
                       onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>
            </div>
            <div class="form-invoice-input">
                <label class="label-input" for="supplierid">ID Nhà Cung Cấp</label>
                <input type="text"
                       id="txtSupplierID"
                       name="supplierid"
                       onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>

            </div>
            <div class="form-invoice-input">
                <label class="label-input" for="invoiceid">ID Hóa Đơn</label>
                <input type="text" id="txtInvoiceID" name="invoiceid" onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>

            </div>
            <div class="form-invoice-input">
                <label class="label-input" for="invoicesetupid">ID Dải Hóa Đơn</label>
                <input type="text"
                       id="txtInvoiceSetupID"
                       name="invoicesetupid"
                       onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>

            </div>
            <div class="form-invoice-input">
                <label class="label-input" for="startdate">Ngày Bắt Đầu</label>
                <input type="date" id="txtStartDate" name="startdate" onblur="handleError(this.id)" />
                <span style="color: red; display: block"></span>

            </div>
        </div>
        <div class="form-invoice-btn">
            <button class="btn-invoice" id="btn-create"  onclick="Create()">Thêm</button>
            <button class="btn-invoice" id="btn-export" >Xuất Excel</button>
            <button style="display:none" class="btn-invoice" id="btn-update"  onclick="Update()">Sửa</button>
            <button style="display:none" class="btn-invoice" id="btn-delete"  onclick="Delete()">Xóa</button>
            <button class="btn-invoice" id="btn-search"  onclick="Search()">Tìm Kiếm</button>
            <button class="btn-invoice" id="btn-refresh" onclick="Refresh()" >Làm Mới</button>
        </div>
    </form>
</div>
<div class="invoice-data-container">
    <table class="table">
        <thead>
            <tr>
                <th>ID Khách Hàng</th>
                <th>ID Nhà Cung Cấp</th>
                <th>ID Hóa Đơn</th>
                <th>Code</th>
                <th>Ngày Bắt Đầu</th>
                <th>ID Dải Hóa Đơn</th>
            </tr>
        </thead>
        <tbody>
    }
           @for (int i = 0; i < Model.Count; i++)
            {
                <tr style="text-align:center">
                    <td>@Html.DisplayTextFor(m => Model[i].CustomerId)</td>
                    <td>@Html.DisplayTextFor(m => Model[i].SupplierId)</td>
                    <td>@Html.DisplayTextFor(m => Model[i].InvoiceId)</td>
                    <td>@Html.DisplayTextFor(m => Model[i].InvoiceCode)</td>
                    <td>@Html.DisplayTextFor(m => Model[i].StartDate)</td>
                    <td>@Html.DisplayTextFor(m => Model[i].InvoiceSetupId)</td>
                    <td>
                        <span onclick="handleUpdate(@i)">
                            <img style="width:18px; height:18px"
                                 src="~/Content/images/edit.svg" title="Edit user" />
                        </span>
                        <span onclick="handleDelete(@i)">
                            <img style="width:18px; height:18px; margin-left: 4%;"
                                 src="~/Content/images/bin.svg" title="Delete user" />
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="data-paginate"></div>
</div>
<script>
    const isNull = (id) => {
        if (document.getElementById(id).value.trim() === "") {
            return true
        }
        else
            return false
    }

    const handleError = (id) => {
        document.getElementById(id).parentElement.querySelector("span").innerText = ""
    }

    const handleUpdate = (i) => {
        const x = document.getElementById("btn-update");
        if (x.style.display === "none") {
            x.style.display = "block";
        }
        if (i === 0) {
            let getDate = document.querySelector(`table tbody tr:first-child`).children[4].innerText.slice(0, -11).split("/")
            if (parseInt(getDate[0]) >= 1 && parseInt(getDate[0]) <= 9) {
                getDate[0] = "0" + getDate[0]
            }
            if (parseInt(getDate[1]) >= 1 && parseInt(getDate[1]) <= 9) {
                getDate[1] = "0" + getDate[1]
            }
            const dateFormat = getDate[2].trim() + "-" + getDate[0] + "-" + getDate[1]
            document.getElementById('txtCustomerID').value = document.querySelector(`table tbody tr:first-child`).children[0].innerText
            document.getElementById('txtSupplierID').value = document.querySelector(`table tbody tr:first-child`).children[1].innerText
            document.getElementById('txtInvoiceID').value = document.querySelector(`table tbody tr:first-child`).children[2].innerText
            document.getElementById('txtInvoiceSetupID').value = document.querySelector(`table tbody tr:first-child`).children[5].innerText
            document.getElementById('txtStartDate').value = dateFormat
        } else {
            let getDate = document.querySelector(`table tbody tr:nth-child(${i + 1})`).children[4].innerText.slice(0, -11).split("/")
            console.log(getDate)
            if (parseInt(getDate[0]) >= 1 && parseInt(getDate[0]) <= 9) {
                getDate[0] = "0" + getDate[0]
            }
            console.log(getDate)
            if (parseInt(getDate[1]) >= 1 && parseInt(getDate[1]) <= 9) {
                getDate[1] = "0" + getDate[1]
            }
            console.log(getDate)
            const dateFormat = getDate[2].trim() + "-" + getDate[0] + "-" + getDate[1]
            document.getElementById('txtCustomerID').value = document.querySelector(`table tbody tr:nth-child(${i+1})`).children[0].innerText
            document.getElementById('txtSupplierID').value = document.querySelector(`table tbody tr:nth-child(${i+1})`).children[1].innerText
            document.getElementById('txtInvoiceID').value = document.querySelector(`table tbody tr:nth-child(${i+1})`).children[2].innerText
            document.getElementById('txtInvoiceSetupID').value = document.querySelector(`table tbody tr:nth-child(${i + 1})`).children[5].innerText
            document.getElementById('txtStartDate').value = dateFormat
        }
    }

    const handleDelete = (i) => {
        const x = document.getElementById("btn-delete");
        if (x.style.display === "none") {
            x.style.display = "block";
        }
        i === 0 ? document.getElementById('txtInvoiceID').value = document.querySelector(`table tbody tr:first-child`).children[2].innerText : document.getElementById('txtInvoiceID').value = document.querySelector(`table tbody tr:nth-child(${i + 1})`).children[2].innerText
    }

    const Delete = () => {
        const x = document.getElementById("btn-delete");
        const y = document.getElementById("txtInvoiceID");
        const z = document.getElementById("form_info")
        if (isNull("txtInvoiceID")) {
            document.getElementById('btn-delete').setAttribute("type", "button")
            y.focus()
            y.parentElement.querySelector("span").innerText = "Cần điền trường này !"
        } else {
            if (x.style.display === "block") {
                x.style.display = "none";
            }
            y.parentElement.querySelector("span").innerText = ""
            x.setAttribute("type", "submit")
            z.setAttribute("action", "@Url.Action("DeleteInvoice", "Invoice")")
        }
    }

    const Update = () => {
        const x = document.getElementById("btn-update");
        const y = document.getElementById("form_info")
        if (isNull("txtInvoiceID") || isNull("txtCustomerID") || isNull("txtSupplierID") || isNull("txtInvoiceSetupID") || isNull("txtStartDate")) {
            x.setAttribute("type", "button")
            alert("Cần điền đầy đủ các trường")
        } else {
            if (x.style.display === "block") {
                x.style.display = "none";
            }
            x.setAttribute("type", "submit")
            y.setAttribute("action", "@Url.Action("UpdateInvoice", "Invoice")")
        }
    }

    const Create = () => {
        const x = document.getElementById("btn-create")
        const y = document.getElementById("form_info")
        if (isNull("txtInvoiceID") || isNull("txtCustomerID") || isNull("txtSupplierID") || isNull("txtInvoiceSetupID") || isNull("txtStartDate")) {
            x.setAttribute("type", "button")
            alert("Cần điền đầy đủ các trường")
        } else {
            x.setAttribute("type", "submit")
            y.setAttribute("action", "@Url.Action("CreateInvoice", "Invoice")")
        }
    }

    const Search = () => {
        const x = document.getElementById("btn-search");
        const y = document.getElementById("txtInvoiceID");
        const z = document.getElementById("form_info")
        if (isNull("txtInvoiceID")) {
            x.setAttribute("type", "button")
            y.focus()
            y.parentElement.querySelector("span").innerText = "Cần điền trường này !"
        } else {
            y.parentElement.querySelector("span").innerText = ""
            x.setAttribute("type", "submit")
            z.setAttribute("action", "@Url.Action("Invoice", "Invoice")")
        }
    }

    const Refresh = () => {
        document.getElementById("form_info").setAttribute("method", "GET")
        document.getElementById("form_info").setAttribute("action", "@Url.Action("Invoice", "Invoice")")
    }

</script>



